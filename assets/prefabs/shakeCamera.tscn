[gd_scene load_steps=3 format=3 uid="uid://b8aby1eqxx225"]

[sub_resource type="GDScript" id="GDScript_74lek"]
resource_name = "cameraControl"
script/source = "extends Camera2D

@export var decay: float = 0.999 #How quickly shaking will stop [0,1].
@export var max_offset: Vector2 = Vector2(200,200) #Maximum displacement in pixels.
@export var max_roll: float = 0.2 #Maximum rotation in radians (use sparingly).
@export var violence_factor: float = 2.0 #How violent the shake is [1,3]
@export var noise: FastNoiseLite #The source of random values.

var noise_y = 0 #Value used to move through the noise

var trauma := 0.0 #Current shake strength
var trauma_pwr := 3 #Trauma exponent. Use [2,3]

func _ready():
	randomize()
	noise.seed = randi()

func add_trauma(amount: float):
	trauma = min(trauma + amount, 1.0)

func _process(delta):
	if trauma:
		trauma = max(trauma - decay * delta, 0)
		shake()
	elif offset.x != 0 or offset.y != 0 or rotation != 0:
		lerp(offset.x,0.0,1)
		lerp(offset.y,0.0,1)
		lerp(rotation,0.0,1)

func shake(): 
	var amt = pow(trauma, trauma_pwr)
	noise_y += 5
	rotation = max_roll * amt * noise.get_noise_2d(0, noise_y)
	offset.x = max_offset.x * amt * noise.get_noise_2d(1000, noise_y)
	offset.y = max_offset.y * amt * noise.get_noise_2d(2000, noise_y)
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_74lek"]

[node name="camera" type="Camera2D"]
script = SubResource("GDScript_74lek")
noise = SubResource("FastNoiseLite_74lek")
